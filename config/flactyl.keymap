/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define L_DEFAULT 0
#define L_HOME 1
#define L_RUSSIAN 2
#define L_QWERTY  3
#define L_COLEMAK 4
#define L_MIRROR 5
#define L_APP_ONE 6
#define L_APP_TWO 7
#define L_ARROWS   8
#define L_SYMBOLS 9
#define L_NUMBERS 10
#define L_WINDOWS 11
#define L_WINDOWS2 12
#define L_CONFIG  13
#define L_TMP  14
#define L_TRANS  15


/* sticky keys timeout */
&sk {
    release-after-ms = <3000>;
};

/ {
	combos {
		compatible = "zmk,combos";
		combo_spc {
			timeout-ms = <50>;
			key-positions = <2 3>;
			bindings = <&kp SPACE>;
		};
		combo_t1 {
				timeout-ms = <100>;
				key-positions = <30 36>;
				bindings = <&kp N1>;
		};
		combo_t2 {
				timeout-ms = <100>;
				key-positions = <31 37>;
				bindings = <&kp N2>;
		};
		combo_t3 {
				timeout-ms = <100>;
				key-positions = <32 38>;
				bindings = <&kp N3>;
		};
		combo_t4 {
				timeout-ms = <100>;
				key-positions = <30 31>;
				bindings = <&kp N4>;
		};
		combo_t5 {
				timeout-ms = <100>;
				key-positions = <31 32>;
				bindings = <&kp N5>;
		};
		combo_t6 {
				timeout-ms = <100>;
				key-positions = <36 37>;
				bindings = <&kp N6>;
		};
		combo_t7 {
				timeout-ms = <100>;
				key-positions = <37 38>;
				bindings = <&kp N7>;
		};
	};

	behaviors {
		gqth: global-quick-tap-hold {
			compatible = "zmk,behavior-hold-tap";
			label = "global-quick-tap-hold";
			#binding-cells = <2>;
			flavor = "tap-preferred";
			tapping-term-ms = <200>;
			quick-tap-ms = <125>;
			global-quick-tap;
			bindings = <&kp>, <&kp>;
		};
		gqthq: global-quick-tap-hold-q {
			compatible = "zmk,behavior-hold-tap";
			label = "global-quick-tap-hold-q";
			#binding-cells = <2>;
			flavor = "tap-preferred";
			tapping-term-ms = <200>;
			quick-tap-ms = <125>;
			global-quick-tap;
			bindings = <&kp>, <&repeatqq>;
		};
		th: tap-hold {
			compatible = "zmk,behavior-hold-tap";
			label = "tap-hold";
			#binding-cells = <2>;
			flavor = "tap-preferred";
			tapping-term-ms = <200>;
			bindings = <&kp>, <&kp>;
		};
		 tdq: tap_dance_q {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_Q";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&gqth W Q>, <&gqthq P 0>;
        };
	};

	macros {
		ZMK_MACRO(repeatqq,
			wait-ms = <0>;			
			bindings = <&macro_tap &kp L &kp L>;
		) 
	    ZMK_MACRO(awesome,
			wait-ms = <50>;			
			bindings = <&macro_tap &kp Z &kp M &kp K &kp LS(I) &kp S &kp LS(A) &kp W &kp E &kp S &kp O &kp M &kp E &kp EXCLAMATION>;
		)  
		ZMK_MACRO(ctrl_colemak,
			wait-ms = <0>;			
			bindings 
				= <&macro_press &mo L_COLEMAK &kp LEFT_CONTROL>
				, <&macro_pause_for_release>
				, <&macro_release &mo L_COLEMAK &kp LEFT_CONTROL>;
		)              
    };	

	keymap {
		compatible = "zmk,keymap";
/* 0 */
		default_layer {
			bindings = <
&to 1	&to 1	&to 1	&to 1	&to 1		&to 1	&to 1	&to 1	&to 1	&to 1
&to 1	&to 1	&to 1	&to 1	&to 1		&to 1	&to 1	&to 1	&to 1	&to 1
&to 1	&to 1	&to 1	&to 1	&to 1		&to 1	&to 1	&to 1	&to 1	&to 1
				&to 1	&to 1	&to 1		&to 1	&to 1	&to 1	
				&to 1	&to 1	&to 1		&to 1	&to 1	&to 1	
			>;
		};
/* 1 */
		home_layer {
			bindings = <
&tdq			&kp W			&gqth LG(F) F	&kp P			&mo L_CONFIG			&to L_TMP	&kp L	&kp U	&kp Y	&kp RETURN
&gqth LG(A) A	&gqth LG(R) R	&gqth LG(S)	S	&kp T			&kp G					&kp M		&kp N	&kp E	&kp I	&kp O
&gqth LG(Z) Z	&gqth LG(X)	X	&gqth LG(C)	C	&gqth LG(V) D	&kp B					&kp J		&kp H	&kp V	&kp K	&kp SPACE

					&mo L_WINDOWS	&mo L_ARROWS	&mo L_NUMBERS		&kp SPACE	&mo L_SYMBOLS	&trans
					&mo L_WINDOWS2	&mo L_MIRROR	&ctrl_colemak		&trans		&kp RIGHT_SHIFT	&trans
			>;
		};
/* 2 */	
		russian_layer {
			bindings = <
&kp Q	&kp W	&kp E	&kp R	&th T SLASH			&kp Y	&kp U				&kp I		&kp O		&kp P
&kp A	&kp S	&kp D	&kp F	&kp G				&kp H	&kp J				&kp K		&kp L		&kp SEMICOLON
&kp Z	&kp X	&kp C	&kp V	&kp B				&kp N	&th M RIGHT_BRACKET &kp COMMA	&kp PERIOD 	&th SINGLE_QUOTE LEFT_BRACKET

						&trans		&trans		&trans				&trans		&trans		&trans
						&trans		&trans		&trans				&trans		&trans		&trans
			>;
		};
/* 3 */
		qwerty_layer {
			bindings = <
&kp Q	&kp W	&kp E	&kp R	&kp T				&kp Y	&kp U	&kp I		&kp O		&kp P
&kp A	&kp S	&kp D	&kp F	&kp G				&kp H	&kp J	&kp K		&kp L		&kp SEMICOLON
&kp Z	&kp X	&kp C	&kp V	&kp B				&kp N	&kp M	&kp COMMA	&kp PERIOD 	&kp SLASH

						&trans		&trans		&trans				&trans		&trans		&trans
						&trans		&trans		&trans				&trans		&trans		&trans
			>;
		};
/* 4 */
		colemak_layer {
			bindings = <
&kp Q	&kp W	&kp F	&kp P	&trans				&trans		&kp L	&kp U	&kp Y	&trans
&kp A	&kp R	&kp S	&kp T	&kp G				&kp M		&kp N	&kp E	&kp I	&kp O
&kp Z	&kp X	&kp C	&kp D	&kp B				&kp J		&kp H	&kp V	&kp K	&trans

		&trans		&trans		&trans				&trans		&trans		&trans
		&trans		&trans		&trans				&trans		&trans		&trans
			>;
		};
/* 5 */
		mirror_layer {
			bindings = <
&trans	&kp Y	&kp U	&kp L	&trans				&trans	&kp P	&kp F	&kp W	&kp Q
&kp O	&kp I	&kp E	&kp N	&kp M				&kp G	&kp T	&kp S	&kp R	&kp A
&trans	&kp K	&kp V	&kp H	&kp J				&kp B	&kp D	&kp C	&kp X	&kp Z

		&trans		&trans		&trans				&trans		&trans		&trans
		&trans		&trans		&trans				&trans		&trans		&trans
			>;
		};
/* 6 */
		app1_layer {
			bindings = <
&trans		&trans		&trans		&trans		&trans				&trans		&trans		&trans		&trans		&trans
&trans		&trans		&trans		&trans		&trans				&trans		&trans		&trans		&trans		&trans
&trans		&trans		&trans		&trans		&trans				&trans		&trans		&trans		&trans		&trans

						&trans		&trans		&trans				&trans		&trans		&trans
						&trans		&trans		&trans				&trans		&trans		&trans
			>;
		};
/* 7 */
		app2_layer {
			bindings = <
&trans		&trans		&trans		&trans		&trans				&trans		&trans		&trans		&trans		&trans
&trans		&trans		&trans		&trans		&trans				&trans		&trans		&trans		&trans		&trans
&trans		&trans		&trans		&trans		&trans				&trans		&trans		&trans		&trans		&trans

						&trans		&trans		&trans				&trans		&trans		&trans
						&trans		&trans		&trans				&trans		&trans		&trans
			>;
		};
/* 8 */
		arrows_layer {
			bindings = <
&trans				&kp SPACE			&kp DELETE			&trans			&kp K_VOLUME_UP					&none	&kp HOME		&kp UP_ARROW		&kp PAGE_UP		&none
&kp ESCAPE			&kp TAB				&kp BACKSPACE		&kp RETURN		&kp K_VOLUME_DOWN				&none	&kp LEFT_ARROW	&kp DOWN_ARROW		&kp RIGHT_ARROW	&none
&sk LEFT_ALT 		&sk LEFT_CONTROL	&sk LEFT_SHIFT		&sk LEFT_COMMAND	&kp LG(SPACE)						&none	&kp END			&trans				&kp PAGE_DOWN	&none			

						&trans		&trans		&trans				&trans		&trans		&trans
						&trans		&trans		&trans				&trans		&trans		&trans
			>;
		};
/* 9 */
		symbols_layer {
			bindings = <
&kp SLASH			&kp LEFT_PARENTHESIS	&kp RIGHT_PARENTHESIS	&kp MINUS			&kp PLUS				&kp EXCLAMATION		&kp QUESTION	&kp COLON		&kp SEMICOLON	&kp BACKSLASH
&kp LEFT_BRACKET	&kp RIGHT_BRACKET		&kp LEFT_BRACE			&kp RIGHT_BRACE		&kp ASTERISK			&kp TILDE			&kp PERIOD		&kp COMMA		&kp GRAVE		&kp SINGLE_QUOTE
&kp DOLLAR			&kp LESS_THAN			&kp EQUAL				&kp GREATER_THAN	&kp AT_SIGN				&kp PERCENT			&kp HASH		&kp UNDERSCORE	&kp AMPERSAND	&kp DOUBLE_QUOTES

						&trans		&trans		&trans				&trans		&trans		&trans
						&trans		&trans		&trans				&trans		&trans		&trans
			>;
		};
/* 10 */
		numbers_layer {
			bindings = <
&kp KP_MULTIPLY	&kp N7		&kp N8		&kp N9		&trans				&trans		&trans		&trans		&trans		&trans
&kp KP_PLUS		&kp N1		&kp N2		&kp N3		&kp N0				&trans		&trans		&trans		&trans
&kp KP_DOT		&kp N4		&kp N5		&kp N6		&kp KP_EQUAL		&trans		&trans		&trans		&trans		&trans

						&trans		&trans		&trans				&trans		&trans		&trans
						&trans		&trans		&trans				&trans		&trans		&trans
			>;
		};
/* 11 */
		windows_layer {
			bindings = <
&trans		&trans		&trans		&trans		&trans				&trans		&trans		&trans		&trans		&trans
&trans		&trans		&trans		&trans		&trans				&trans		&trans		&trans		&trans		&trans
&trans		&trans		&trans		&trans		&trans				&trans		&trans		&trans		&trans		&trans

						&trans		&trans		&trans				&trans		&trans		&trans
						&trans		&trans		&trans				&trans		&trans		&trans
			>;
		};
/* 12 */
		windows2_layer {
			bindings = <
&trans		&trans		&trans		&trans		&trans				&trans		&trans		&trans		&trans		&trans
&trans		&trans		&trans		&trans		&trans				&trans		&trans		&trans		&trans		&trans
&trans		&trans		&awesome	&trans		&trans				&trans		&trans		&trans		&trans		&trans

						&trans		&trans		&trans				&trans		&trans		&trans
						&trans		&trans		&trans				&trans		&trans		&trans
			>;
		};
/* 13 */
		config_layer {
			bindings = <
&trans		&trans		&trans		&trans			&trans						&kp N0	&trans	&trans	&trans &kp N1
&trans		&trans		&trans		&reset			&bootloader					&bootloader &reset &trans &trans &trans
&bt BT_PRV	&bt BT_NXT	&bt BT_CLR	&out OUT_USB	&out OUT_BLE				&trans	&trans	&trans	&trans &kp N2

						&trans		&trans		&trans				&trans		&trans		&trans
						&trans		&trans		&trans				&trans		&trans		&trans 
			>;
		};
/* 14 */
		tmp_layer {
			bindings = <
&none		&none		&none		&none		&none				&none		&none		&none		&none		&none
&none		&none		&none		&none		&none				&none		&none		&none		&none		&none
&none		&none		&none		&none		&none				&none		&none		&none		&none		&none

						&kp A		&kp R		&kp S				&none		&none		&none
						&kp Z		&kp X		&kp C				&none		&none		&none
			>;
		};
/* 15 */
		trans_layer {
			bindings = <
&trans		&trans		&trans		&trans		&trans				&trans		&trans		&trans		&trans		&trans
&trans		&trans		&trans		&trans		&trans				&trans		&trans		&trans		&trans		&trans
&trans		&trans		&trans		&trans		&trans				&trans		&trans		&trans		&trans		&trans

						&trans		&trans		&trans				&trans		&trans		&trans
						&trans		&trans		&trans				&trans		&trans		&trans
			>;
		};
	};
};

/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

&sk {
    release-after-ms = <3000>;
};

/ {
	combos {
		compatible = "zmk,combos";
		combo_spc {
			timeout-ms = <50>;
			key-positions = <2 3>;
			bindings = <&kp SPACE>;
		};
		combo_ret {
				timeout-ms = <50>;
				key-positions = <3 13>;
				bindings = <&kp RET>;
		};
	};
	macros {
		ZMK_MACRO(ctrl_colemak,
			wait-ms = <0>;			
			bindings 
				= <&macro_press &mo 3 &kp LSHFT>
				, <&macro_pause_for_release>
				, <&macro_release &mo 3 &kp LSHFT>;
		)              
    };
	macros {
	
	
	keymap {
		compatible = "zmk,keymap";

		default_layer {
			bindings = <
&kp Q	&kp W	&kp F	&kp P	&mo 11				&trans		&kp L	&kp U	&kp Y	&trans
&kp A	&kp R	&kp S	&kp T	&kp G				&kp M		&kp N	&kp E	&kp I	&kp O
&kp Z	&kp X	&kp C	&kp D	&kp B				&kp J		&kp H	&kp V	&kp K	&trans

					&mo 1		&mo 6	&mo 8				&kp SPACE	&mo 1	&kp LEFT_SHIFT
					&mo 1		&mo 2	&mo 1		&mo 1		&mo 1	&mo 1
			>;
		};
/* 1 */
		russian_layer {
			bindings = <
&kp Q	&kp W	&kp E	&kp R	&mo T				&kp Y	&kp U	&kp I		&kp O		&kp P
&kp A	&kp S	&kp D	&kp F	&kp G				&kp H	&kp J	&kp K		&kp L		&kp SEMICOLON
&kp Z	&kp X	&kp C	&kp V	&kp B				&kp N	&kp M	&kp COMMA	&kp PERIOD 	&kp SLASH

						&trans		&trans		&trans				&trans		&trans		&trans
						&trans		&trans		&trans				&trans		&trans		&trans
			>;
		};
/* 2 */
		qwerty_layer {
			bindings = <
&kp Q	&kp W	&kp E	&kp R	&mo T				&kp Y	&kp U	&kp I		&kp O		&kp P
&kp A	&kp S	&kp D	&kp F	&kp G				&kp H	&kp J	&kp K		&kp L		&kp SEMICOLON
&kp Z	&kp X	&kp C	&kp V	&kp B				&kp N	&kp M	&kp COMMA	&kp PERIOD 	&kp SLASH

						&trans		&trans		&trans				&trans		&trans		&trans
						&trans		&trans		&trans				&trans		&trans		&trans
			>;
		};
/* 3 */
		colemak_layer {
			bindings = <
&kp Q	&kp W	&kp F	&kp P	&trans				&trans		&kp L	&kp U	&kp Y	&trans
&kp A	&kp R	&kp S	&kp T	&kp G				&kp M		&kp N	&kp E	&kp I	&kp O
&kp Z	&kp X	&kp C	&kp D	&kp B				&kp J		&kp H	&kp V	&kp K	&trans

						&trans		&trans		&trans				&trans		&trans		&trans
						&trans		&trans		&trans				&trans		&trans		&trans
			>;
		};
/* 4 */
		app1_layer {
			bindings = <
&trans		&trans		&trans		&trans		&trans				&trans		&trans		&trans		&trans		&trans
&trans		&trans		&trans		&trans		&trans				&trans		&trans		&trans		&trans		&trans
&trans		&trans		&trans		&trans		&trans				&trans		&trans		&trans		&trans		&trans

						&trans		&trans		&trans				&trans		&trans		&trans
						&trans		&trans		&trans				&trans		&trans		&trans
			>;
		};
/* 5 */
		app2_layer {
			bindings = <
&trans		&trans		&trans		&trans		&trans				&trans		&trans		&trans		&trans		&trans
&trans		&trans		&trans		&trans		&trans				&trans		&trans		&trans		&trans		&trans
&trans		&trans		&trans		&trans		&trans				&trans		&trans		&trans		&trans		&trans

						&trans		&trans		&trans				&trans		&trans		&trans
						&trans		&trans		&trans				&trans		&trans		&trans
			>;
		};
/* 6 */
		arrows_layer {
			bindings = <
&trans				&kp SPACE			&trans				&kp DELETE		&kp K_VOLUME_UP				&trans			&kp HOME			&kp UP_ARROW		&kp PAGE_UP		&trans
&kp ESCAPE			&kp TAB				&kp BACKSPACE		&kp RETURN		&kp K_VOLUME_DOWN			&kp LEFT_ARROW	&kp DOWN_ARROW		&kp RIGHT_ARROW		&trans			&trans
&sk LEFT_ALT 		&sk LEFT_CONTROL	&sk LEFT_SHIFT		&sk LEFT_COMMAND	&trans						&trans			&kp END				&trans				&trans			&kp PAGE_DOWN

						&trans		&trans		&trans				&trans		&trans		&trans
						&trans		&trans		&trans				&trans		&trans		&trans
			>;
		};
/* 7 */
		symbols_layer {
			bindings = <
&kp SLASH			&kp LEFT_PARENTHESIS	&kp RIGHT_PARENTHESIS	&kp MINUS			&kp PLUS				&kp EXCLAMATION		&kp QUESTION	&kp COLON		&kp SEMICOLON	&kp BACKSLASH
&kp LEFT_BRACKET	&kp RIGHT_BRACKET		&kp LEFT_BRACE			&kp RIGHT_BRACE		&kp ASTERISK			&kp TILDE			&kp PERIOD		&kp COMMA		&kp GRAVE		&kp SINGLE_QUOTE
&kp DOLLAR			&kp LESS_THAN			&kp EQUAL				&kp GREATER_THAN	&kp AT_SIGN				&kp PERCENT			&kp HASH		&kp UNDERSCORE	&kp AMPERSAND	&kp DOUBLE_QUOTES

						&trans		&trans		&trans				&trans		&trans		&trans
						&trans		&trans		&trans				&trans		&trans		&trans
			>;
		};
/* 8 */
		numbers_layer {
			bindings = <
&kp KP_MULTIPLY	&kp N7		&kp N8		&kp N9		&trans				&trans		&trans		&trans		&trans		&trans
&kp KP_PLUS		&kp N1		&kp N2		&kp N3		&kp N0				&trans		&trans		&trans		&trans
&kp KP_DOT		&kp N4		&kp N5		&kp N6		&kp KP_EQUAL		&trans		&trans		&trans		&trans		&trans

						&trans		&trans		&trans				&trans		&trans		&trans
						&trans		&trans		&trans				&trans		&trans		&trans
			>;
		};
/* 9 */
		windows_layer {
			bindings = <
&trans		&trans		&trans		&trans		&trans				&trans		&trans		&trans		&trans		&trans
&trans		&trans		&trans		&trans		&trans				&trans		&trans		&trans		&trans		&trans
&trans		&trans		&trans		&trans		&trans				&trans		&trans		&trans		&trans		&trans

						&trans		&trans		&trans				&trans		&trans		&trans
						&trans		&trans		&trans				&trans		&trans		&trans
			>;
		};
/* 10 */
		windows2_layer {
			bindings = <
&trans		&trans		&trans		&trans		&trans				&trans		&trans		&trans		&trans		&trans
&trans		&trans		&trans		&trans		&trans				&trans		&trans		&trans		&trans		&trans
&trans		&trans		&trans		&trans		&trans				&trans		&trans		&trans		&trans		&trans

						&trans		&trans		&trans				&trans		&trans		&trans
						&trans		&trans		&trans				&trans		&trans		&trans
			>;
		};
/* 11 */
		config_layer {
			bindings = <
&trans		&trans		&trans		&trans			&trans						&trans		&trans		&trans		&trans		&trans
&trans		&trans		&trans		&trans			&trans						&trans		&trans		&trans		&trans		&trans
&bt BT_PRV	&bt BT_NXT	&bt BT_CLR	&out OUT_USB	&out OUT_BLE				&trans		&trans		&trans		&trans		&trans

						&trans		&trans		&trans				&trans		&trans		&trans
						&trans		&trans		&trans				&trans		&trans		&trans
			>;
		};
/* 12 */
		trans_layer {
			bindings = <
&trans		&trans		&trans		&trans		&trans				&trans		&trans		&trans		&trans		&trans
&trans		&trans		&trans		&trans		&trans				&trans		&trans		&trans		&trans		&trans
&trans		&trans		&trans		&trans		&trans				&trans		&trans		&trans		&trans		&trans

						&trans		&trans		&trans				&trans		&trans		&trans
						&trans		&trans		&trans				&trans		&trans		&trans
			>;
		};
	};
};

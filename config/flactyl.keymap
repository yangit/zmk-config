/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define L_DEFAULT 0
#define L_MIRROR 1
#define L_RUSSIAN 2
#define L_QWERTY 3
#define L_COLEMAK 4
#define L_NUMBERS 5
#define L_ARROWS 6
#define L_SYMBOLS 7
#define L_WINDOWS 8
#define L_WINDOWS2 9
#define L_CONFIG 10


/* sticky keys timeout */
&sk {
    release-after-ms = <3000>;
};

/ {

    combos {
        compatible = "zmk,combos";
        combo_spc {
            timeout-ms = <50>;
            key-positions = <2 3>;
            bindings = <&kp SPACE>;
        };
    };
    behaviors {
        gqth: global-quick-tap-hold {
            compatible = "zmk,behavior-hold-tap";
            label = "global-quick-tap-hold";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <125>;
            global-quick-tap;
            bindings = <&kp>, <&kp>;
        };
        th: tap-hold {
            compatible = "zmk,behavior-hold-tap";
            label = "tap-hold";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            bindings = <&kp>, <&kp>;
        };
        td_0: td_0 {
            compatible = "zmk,behavior-tap-dance";
            label = "td_0";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&gqth LG(SLASH) Q>, <&tdd_0 LA(LG(Q)) 0>;
        };
        tdd_0: tdd_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "tdd_0";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <125>;
            global-quick-tap;
            bindings = <&kp>, <&tdr_0>;
        };
        td_1: td_1 {
            compatible = "zmk,behavior-tap-dance";
            label = "td_1";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&gqth LG(W) W>, <&tdd_1 LG(Q) 0>;
        };
        tdd_1: tdd_1 {
            compatible = "zmk,behavior-hold-tap";
            label = "tdd_1";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <125>;
            global-quick-tap;
            bindings = <&kp>, <&tdr_1>;
        };
        td_2: td_2 {
            compatible = "zmk,behavior-tap-dance";
            label = "td_2";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&gqth LG(F) F>, <&tdd_2 LA(LG(F)) 0>;
        };
        tdd_2: tdd_2 {
            compatible = "zmk,behavior-hold-tap";
            label = "tdd_2";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <125>;
            global-quick-tap;
            bindings = <&kp>, <&tdr_2>;
        };
        td_3: td_3 {
            compatible = "zmk,behavior-tap-dance";
            label = "td_3";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&gqth LG(P) P>, <&tdd_3 LS(LG(P)) 0>;
        };
        tdd_3: tdd_3 {
            compatible = "zmk,behavior-hold-tap";
            label = "tdd_3";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <125>;
            global-quick-tap;
            bindings = <&kp>, <&tdr_3>;
        };
        td_4: td_4 {
            compatible = "zmk,behavior-tap-dance";
            label = "td_4";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&gqth LG(V) D>, <&tdd_4 LG(LS(V)) 0>;
        };
        tdd_4: tdd_4 {
            compatible = "zmk,behavior-hold-tap";
            label = "tdd_4";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <125>;
            global-quick-tap;
            bindings = <&kp>, <&tdr_4>;
        };
        td_5: td_5 {
            compatible = "zmk,behavior-tap-dance";
            label = "td_5";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&gqth LG(P) P>, <&tdd_5 LS(LG(P)) 0>;
        };
        tdd_5: tdd_5 {
            compatible = "zmk,behavior-hold-tap";
            label = "tdd_5";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <125>;
            global-quick-tap;
            bindings = <&kp>, <&tdr_5>;
        };
        td_6: td_6 {
            compatible = "zmk,behavior-tap-dance";
            label = "td_6";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&gqth LG(F) F>, <&tdd_6 LA(LG(F)) 0>;
        };
        tdd_6: tdd_6 {
            compatible = "zmk,behavior-hold-tap";
            label = "tdd_6";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <125>;
            global-quick-tap;
            bindings = <&kp>, <&tdr_6>;
        };
        td_7: td_7 {
            compatible = "zmk,behavior-tap-dance";
            label = "td_7";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&gqth LG(W) W>, <&tdd_7 LG(Q) 0>;
        };
        tdd_7: tdd_7 {
            compatible = "zmk,behavior-hold-tap";
            label = "tdd_7";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <125>;
            global-quick-tap;
            bindings = <&kp>, <&tdr_7>;
        };
        td_8: td_8 {
            compatible = "zmk,behavior-tap-dance";
            label = "td_8";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&gqth LG(SLASH) Q>, <&tdd_8 LA(LG(Q)) 0>;
        };
        tdd_8: tdd_8 {
            compatible = "zmk,behavior-hold-tap";
            label = "tdd_8";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <125>;
            global-quick-tap;
            bindings = <&kp>, <&tdr_8>;
        };
        td_9: td_9 {
            compatible = "zmk,behavior-tap-dance";
            label = "td_9";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&gqth LG(V) D>, <&tdd_9 LG(LS(V)) 0>;
        };
        tdd_9: tdd_9 {
            compatible = "zmk,behavior-hold-tap";
            label = "tdd_9";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <125>;
            global-quick-tap;
            bindings = <&kp>, <&tdr_9>;
        };
        td_10: td_10 {
            compatible = "zmk,behavior-tap-dance";
            label = "td_10";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&gqth KP_DIVIDE KP_MULTIPLY>, <&tdd_10 COLON 0>;
        };
        tdd_10: tdd_10 {
            compatible = "zmk,behavior-hold-tap";
            label = "tdd_10";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <125>;
            global-quick-tap;
            bindings = <&kp>, <&tdr_10>;
        };
        td_11: td_11 {
            compatible = "zmk,behavior-tap-dance";
            label = "td_11";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&gqth KP_DIVIDE KP_MULTIPLY>, <&tdd_11 COLON 0>;
        };
        tdd_11: tdd_11 {
            compatible = "zmk,behavior-hold-tap";
            label = "tdd_11";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <125>;
            global-quick-tap;
            bindings = <&kp>, <&tdr_11>;
        };
        td_12: td_12 {
            compatible = "zmk,behavior-tap-dance";
            label = "td_12";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&gqth LS(RETURN) RETURN>, <&tdd_12 LC(RETURN) 0>;
        };
        tdd_12: tdd_12 {
            compatible = "zmk,behavior-hold-tap";
            label = "tdd_12";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <125>;
            global-quick-tap;
            bindings = <&kp>, <&tdr_12>;
        };
        td_13: td_13 {
            compatible = "zmk,behavior-tap-dance";
            label = "td_13";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&gqth LA(LG(LC(LS(V)))) LA(LG(LC(LS(Z))))>, <&tdd_13 LA(LG(LC(LS(KP_N3)))) 0>;
        };
        tdd_13: tdd_13 {
            compatible = "zmk,behavior-hold-tap";
            label = "tdd_13";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <125>;
            global-quick-tap;
            bindings = <&kp>, <&tdr_13>;
        };
        td_14: td_14 {
            compatible = "zmk,behavior-tap-dance";
            label = "td_14";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&gqth LA(LG(LC(LS(KP_N1)))) LA(LG(LC(LS(B))))>, <&tdd_14 LA(LG(LC(LS(KP_N2)))) 0>;
        };
        tdd_14: tdd_14 {
            compatible = "zmk,behavior-hold-tap";
            label = "tdd_14";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <125>;
            global-quick-tap;
            bindings = <&kp>, <&tdr_14>;
        };
        td_15: td_15 {
            compatible = "zmk,behavior-tap-dance";
            label = "td_15";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&gqth LA(LG(LC(LS(L)))) LA(LG(LC(LS(M))))>, <&tdd_15 LA(LG(LC(LS(N)))) 0>;
        };
        tdd_15: tdd_15 {
            compatible = "zmk,behavior-hold-tap";
            label = "tdd_15";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <125>;
            global-quick-tap;
            bindings = <&kp>, <&tdr_15>;
        };
    };
    macros {
        ZMK_MACRO(awesome,
            wait-ms = <200>;
            bindings = <&macro_tap &kp M &kp O &kp O &kp N &kp L &kp A &kp N &kp D &kp E &kp R &kp LS(I) &kp S &kp A &kp W &kp E &kp S &kp RETURN>;
        )
        ZMK_MACRO(shellrepeat,
            wait-ms = <400>;
            bindings = <&macro_tap &kp LG(KP_N1) &kp UP_ARROW &kp RETURN>;
        )
        ZMK_MACRO(ctrl_colemak,
            wait-ms = <0>;
            bindings 
                = <&macro_press &mo L_COLEMAK &kp LEFT_CONTROL>
                , <&macro_pause_for_release>
                , <&macro_release &mo L_COLEMAK &kp LEFT_CONTROL>;
        )
        ZMK_MACRO(tdr_0,
            wait-ms = <0>;
            bindings = <&macro_tap &kp Q &kp Q>;
        )
        ZMK_MACRO(tdr_1,
            wait-ms = <0>;
            bindings = <&macro_tap &kp W &kp W>;
        )
        ZMK_MACRO(tdr_2,
            wait-ms = <0>;
            bindings = <&macro_tap &kp F &kp F>;
        )
        ZMK_MACRO(tdr_3,
            wait-ms = <0>;
            bindings = <&macro_tap &kp P &kp P>;
        )
        ZMK_MACRO(tdr_4,
            wait-ms = <0>;
            bindings = <&macro_tap &kp D &kp D>;
        )
        ZMK_MACRO(tdr_5,
            wait-ms = <0>;
            bindings = <&macro_tap &kp P &kp P>;
        )
        ZMK_MACRO(tdr_6,
            wait-ms = <0>;
            bindings = <&macro_tap &kp F &kp F>;
        )
        ZMK_MACRO(tdr_7,
            wait-ms = <0>;
            bindings = <&macro_tap &kp W &kp W>;
        )
        ZMK_MACRO(tdr_8,
            wait-ms = <0>;
            bindings = <&macro_tap &kp Q &kp Q>;
        )
        ZMK_MACRO(tdr_9,
            wait-ms = <0>;
            bindings = <&macro_tap &kp D &kp D>;
        )
        ZMK_MACRO(tdr_10,
            wait-ms = <0>;
            bindings = <&macro_tap &kp KP_MULTIPLY &kp KP_MULTIPLY>;
        )
        ZMK_MACRO(tdr_11,
            wait-ms = <0>;
            bindings = <&macro_tap &kp KP_MULTIPLY &kp KP_MULTIPLY>;
        )
        ZMK_MACRO(tdr_12,
            wait-ms = <0>;
            bindings = <&macro_tap &kp RETURN &kp RETURN>;
        )
        ZMK_MACRO(tdr_13,
            wait-ms = <0>;
            bindings = <&macro_tap &kp LA(LG(LC(LS(Z)))) &kp LA(LG(LC(LS(Z))))>;
        )
        ZMK_MACRO(tdr_14,
            wait-ms = <0>;
            bindings = <&macro_tap &kp LA(LG(LC(LS(B)))) &kp LA(LG(LC(LS(B))))>;
        )
        ZMK_MACRO(tdr_15,
            wait-ms = <0>;
            bindings = <&macro_tap &kp LA(LG(LC(LS(M)))) &kp LA(LG(LC(LS(M))))>;
        )
    };
    keymap {
        compatible = "zmk,keymap";
        
        /* default 0 */
        default_layer {
            bindings = <
&td_0	&td_1	&td_2	&td_3	&mo L_CONFIG
&gqth LG(A) A	&gqth LG(R) R	&gqth LG(S) S	&gqth LG(T) T	&gqth LG(G) G
&gqth LG(Z) Z	&gqth LG(X) X	&gqth LG(C) C	&td_4	&gqth LG(B) B
&mo L_WINDOWS	&mo L_ARROWS	&mo L_NUMBERS
&mo L_WINDOWS2	&mo L_MIRROR	&ctrl_colemak
&mo L_CONFIG	&gqth LG(L) L	&gqth LG(U) U	&gqth LG(Y) Y	&none
&gqth LG(M) M	&gqth LG(N) N	&gqth LG(E) E	&gqth LG(I) I	&gqth LG(O) O
&gqth LG(J) J	&gqth LG(H) H	&gqth LG(V) V	&gqth LG(K) K	&none
&kp SPACE	&mo L_SYMBOLS	&kp RIGHT_SHIFT
&none	&none	&none
            >;
        };
    

        /* mirror 1 */
        mirror_layer {
            bindings = <
&none	&gqth LG(Y) Y	&gqth LG(U) U	&gqth LG(L) L	&mo L_CONFIG
&gqth LG(O) O	&gqth LG(I) I	&gqth LG(E) E	&gqth LG(N) N	&gqth LG(M) M
&none	&gqth LG(K) K	&gqth LG(V) V	&gqth LG(H) H	&gqth LG(J) J
&none	&none	&none
&none	&none	&none
&mo L_CONFIG	&td_5	&td_6	&td_7	&td_8
&gqth LG(G) G	&gqth LG(T) T	&gqth LG(S) S	&gqth LG(R) R	&gqth LG(A) A
&gqth LG(B) B	&td_9	&gqth LG(C) C	&gqth LG(X) X	&gqth LG(Z) Z
&none	&none	&none
&none	&none	&none
            >;
        };
    

        /* russian 2 */
        russian_layer {
            bindings = <
&kp Q	&kp W	&kp E	&kp R	&gqth T SLASH
&kp A	&kp S	&kp D	&kp F	&kp G
&kp Z	&kp X	&kp C	&kp V	&kp B
&trans	&trans	&trans
&trans	&trans	&trans
&kp Y	&kp U	&kp I	&kp O	&kp P
&kp H	&kp J	&kp K	&kp L	&kp SEMICOLON
&kp N	&gqth M RIGHT_BRACKET	&kp COMMA	&kp PERIOD	&gqth SINGLE_QUOTE LEFT_BRACKET
&trans	&trans	&trans
&trans	&trans	&trans
            >;
        };
    

        /* qwerty 3 */
        qwerty_layer {
            bindings = <
&kp Q	&kp W	&kp E	&kp R	&kp T
&kp A	&kp S	&kp D	&kp F	&kp G
&kp Z	&kp X	&kp C	&kp V	&kp B
&trans	&trans	&trans
&trans	&trans	&trans
&kp Y	&kp U	&kp I	&kp O	&kp P
&kp H	&kp J	&kp K	&kp L	&kp SEMICOLON
&kp N	&kp M	&kp COMMA	&kp PERIOD	&kp SLASH
&trans	&trans	&trans
&trans	&trans	&trans
            >;
        };
    

        /* colemak 4 */
        colemak_layer {
            bindings = <
&kp Q	&kp W	&kp F	&kp P	&none
&kp A	&kp S	&kp D	&kp F	&kp G
&kp Z	&kp X	&kp C	&kp V	&kp B
&trans	&trans	&trans
&trans	&trans	&trans
&none	&kp L	&kp U	&kp Y	&none
&kp M	&kp N	&kp E	&kp I	&kp O
&kp J	&kp H	&kp V	&kp K	&none
&trans	&trans	&trans
&trans	&trans	&trans
            >;
        };
    

        /* numbers 5 */
        numbers_layer {
            bindings = <
&td_10	&kp N7	&kp N8	&kp N9	&trans
&gqth KP_MINUS KP_PLUS	&kp N1	&kp N2	&kp N3	&kp N0
&gqth COMMA KP_DOT	&kp N4	&kp N5	&kp N6	&kp KP_EQUAL
&trans	&trans	&trans
&trans	&trans	&trans
&trans	&kp N9	&kp N8	&kp N7	&td_11
&kp N0	&kp N3	&kp N2	&kp N1	&gqth KP_MINUS KP_PLUS
&kp KP_EQUAL	&kp N6	&kp N5	&kp N4	&gqth COMMA KP_DOT
&trans	&trans	&trans
&trans	&trans	&trans
            >;
        };
    

        /* arrows 6 */
        arrows_layer {
            bindings = <
&kp LC(EQUAL)	&kp SPACE	&kp DELETE	&kp LC(EQUAL)	&kp K_VOLUME_UP
&kp ESCAPE	&kp TAB	&kp BACKSPACE	&td_12	&kp K_VOLUME_DOWN
&sk LEFT_ALT	&sk LEFT_CONTROL	&sk LEFT_SHIFT	&sk LEFT_COMMAND	&gqth LC(LG(Q)) LG(SPACE)
&trans	&trans	&trans
&trans	&trans	&trans
&none	&kp HOME	&kp UP_ARROW	&kp PAGE_UP	&none
&none	&kp LEFT_ARROW	&kp DOWN_ARROW	&kp RIGHT_ARROW	&none
&none	&kp END	&none	&kp PAGE_DOWN	&none
&trans	&trans	&trans
&trans	&trans	&trans
            >;
        };
    

        /* symbols 7 */
        symbols_layer {
            bindings = <
&kp SLASH	&kp LEFT_PARENTHESIS	&kp RIGHT_PARENTHESIS	&kp MINUS	&kp PLUS
&kp LEFT_BRACKET	&kp RIGHT_BRACKET	&kp LEFT_BRACE	&kp RIGHT_BRACE	&kp ASTERISK
&kp DOLLAR	&kp LESS_THAN	&kp EQUAL	&kp GREATER_THAN	&kp AT_SIGN
&trans	&trans	&trans
&trans	&trans	&trans
&kp EXCLAMATION	&kp QUESTION	&kp COLON	&kp SEMICOLON	&gqth PIPE BACKSLASH
&kp TILDE	&kp PERIOD	&kp COMMA	&kp GRAVE	&kp SINGLE_QUOTE
&gqth CARET PERCENT	&kp HASH	&kp UNDERSCORE	&kp AMPERSAND	&kp DOUBLE_QUOTES
&trans	&trans	&trans
&trans	&trans	&trans
            >;
        };
    

        /* windows 8 */
        windows_layer {
            bindings = <
&kp LG(LEFT_BRACKET)	&kp LS(LC(TAB))	&kp LG(GRAVE)	&kp LG(LC(LS(G)))	&none
&kp LG(KP_N0)	&kp LG(KP_N1)	&kp LG(KP_N2)	&kp LG(KP_N3)	&kp LG(KP_N4)
&kp LG(EQUAL)	&gqth LG(LS(KP_N6)) LG(KP_N6)	&gqth LG(LS(KP_N7)) LG(KP_N7)	&gqth LG(LS(KP_N8)) LG(KP_N8)	&gqth LG(LS(KP_N9)) LG(KP_N9)
&trans	&trans	&trans
&trans	&trans	&trans
&trans	&trans	&trans	&trans	&trans
&trans	&trans	&trans	&trans	&trans
&trans	&trans	&trans	&trans	&trans
&trans	&trans	&trans
&trans	&trans	&trans
            >;
        };
    

        /* windows2 9 */
        windows2_layer {
            bindings = <
&kp LG(RIGHT_BRACKET)	&kp LC(TAB)	&kp LS(LG(GRAVE))	&kp LA(LG(LC(LS(G))))	&kp LC(LS(N0))
&td_13	&gqth LA(LG(LC(LS(K)))) LA(LG(LC(LS(X))))	&gqth LA(LG(LC(LS(KP_N0)))) LA(LG(LC(LS(C))))	&td_14	&gqth LS(LG(KP_N9)) LG(KP_N9)
&kp LG(MINUS)	&shellrepeat	&awesome	&td_15	&kp LG(LS(N4))
&trans	&trans	&trans
&trans	&trans	&trans
&trans	&trans	&trans	&trans	&trans
&trans	&trans	&trans	&trans	&trans
&trans	&trans	&trans	&trans	&trans
&trans	&trans	&trans
&trans	&trans	&trans
            >;
        };
    

        /* config 10 */
        config_layer {
            bindings = <
&bootloader	&none	&none	&none	&none
&sys_reset	&none	&none	&none	&none
&bt BT_PRV	&bt BT_NXT	&bt BT_CLR	&out OUT_USB	&out OUT_BLE
&none	&none	&none
&none	&none	&none
&none	&none	&none	&none	&bootloader
&none	&none	&none	&none	&none
&none	&none	&none	&none	&none
&none	&none	&none
&none	&none	&none
            >;
        };
    
    };
};
